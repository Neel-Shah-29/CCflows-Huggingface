name: "PlanCritic_Flow"
description: |2-
  Given a problem description and a solution strategy candidate, provide useful feedback concerning its correctness. 

# ~~~ Input interface specification ~~~
input_interface_non_initialized:
  - "problem_description"
  - "io_description"
  - "constraints"
  - "python_stub"
  - "plan"

input_interface_initialized:
  - "query"

# ~~~ Output interface specification ~~~
output_interface:
  - "api_output"

# ~~~ Flow specification ~~~
backends:
  model_name:
      openai: "gpt-4"
      azure: "azure/gpt-4"

  n: 1
  max_tokens: 3000
  temperature: 0.3

  top_p: 0.2
  frequency_penalty: 0
  presence_penalty: 0

system_message_prompt_template:
  _target_: aiflows.prompt_template.JinjaPrompt
  template: |2-
      Your goal is to identify potential issues with a conceptual solution to a given competitive programming problem.

      The user will specify the problem by providing you with:
        - the problem statement
        - example test cases
        - the constraints of the problem
        - a conceptual solution attempt

      Crucially, your goal is to consider all aspects of the problem and pinpoint potential issues with the conceptual solution attempt (if any), and not to provide the conceptual solution or the code implementation yourself.
      Some aspects to consider: Are there any logical mistakes with the proposed algorithm? Are the corner cases correctly handled?
      The user will provide you with a task and an output format that you will strictly follow.
  input_variables: []
  

human_message_prompt_template:
  _target_: aiflows.prompt_template.JinjaPrompt
  template: "{{query}}"
  input_variables:
    - "query"
  

init_human_message_prompt_template:
  _target_: aiflows.prompt_template.JinjaPrompt
  template: |2-
    # Problem statement
    {{problem_description}}

    {{io_description}}

    # Constraints
    {{constraints}}
    
    # code stub
    ```python
    {{python_stub}}
    ```

    # Conceptual solution attempt
    {{plan}}


    Consider the problem statement and the solution attempt. Are there any issues with the proposed conceptual solution or it is correct? Explain your reasoning very concisely.
  input_variables:
    - "problem_description"
    - "io_description"
    - "constraints"
    - "python_stub"
    - "plan"
  
